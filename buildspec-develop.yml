version: 0.2

env:
  variables:
    REPOSITORY_URI: "717566366360.dkr.ecr.us-east-1.amazonaws.com/dev-portal-ui-develop"
    IMAGE_TAG: "2.5.0-SNAPSHOT"

phases:
  install:
    commands:
      - npm i
      - npm install -g @angular/cli@6.0.7
      - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      - echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
      - sudo apt-get update 
      - sudo apt-get -y --allow-unauthenticated install google-chrome-stable
  pre_build:
    commands:
      - ng test --sourceMap=false --browsers ChromeHeadlessNoSandbox --watch false --codeCoverage
      #- ng e2e --baseUrl='https://dev.code-test.aws.pearson.com/' --suite nonprod
      - TIMESTAMP=$(date +"%m%d%Y%H%M%S")
      - aws s3 cp coverage/ s3://codebuild-dev-portal-ui-tests-develop-717566366360/$(echo $TIMESTAMP)/coverage --recursive
      - aws s3 cp htmlreport/ s3://codebuild-dev-portal-ui-tests-develop-717566366360/$(echo $TIMESTAMP)/e2e --recursive
      - echo Unit Test Coverage Link https://s3.amazonaws.com/codebuild-dev-portal-ui-tests-develop-717566366360/$TIMESTAMP/coverage/index.html
      - echo E2E Test Coverage Link https://s3.amazonaws.com/codebuild-dev-portal-ui-tests-develop-717566366360/$TIMESTAMP/e2e/report.html
  build:
    commands:
      - echo Building the Docker image...        
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$(echo $IMAGE_TAG-$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7))
  post_build:
    commands:
      - echo Pushing the Docker images...
      - $(aws ecr get-login --region us-east-1 --no-include-email)
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$(echo $IMAGE_TAG-$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7))
      - echo Writing image definitions file...
      - printf '[{"name":"dev-portal-ui-develop","imageUri":"%s"}]' $REPOSITORY_URI:$(echo $IMAGE_TAG-$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)) > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
